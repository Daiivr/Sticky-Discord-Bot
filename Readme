# Pokémon Legends Sticky Bot

A Discord bot for Pokémon Legends that allows for sticky messages in Discord channels. This bot ensures that important messages stay visible by periodically reposting them.

## Features

- Sticky messages that stay at the bottom of the channel.
- Commands to set the color, image, title, and content of sticky messages.
- Permissions-based command access.
- Auto-deletion of command messages to keep the chat clean.
- Persistent storage of the last sticky message ID to ensure proper cleanup on bot restart.

## Setup

### Prerequisites

- Node.js (v16.6.0 or higher)
- npm (v7.20.0 or higher)
- MySQL database

### Installation

1. Clone the repository:

    ```
    git clone https://github.com/yourusername/pokemon-legends-sticky-bot.git
    cd pokemon-legends-sticky-bot
    ```

2. Install the dependencies:

    ```
    npm install
    ```

3. Create a `.env` file in the root directory and add your Discord bot token:

    ```
    DISCORD_TOKEN=your-discord-bot-token
    ```

4. Create a `LastPost.json` file in the root directory:

    ```
    {}
    ```

5. Update the MySQL database connection details in the `index.js` file:

    ```
    const db = createPool({
        host: 'your-database-host',
        user: 'your-database-user',
        password: 'your-database-password',
        database: 'your-database-name',
    });
    ```

### Running the Bot

Start the bot using the following command:

```
node index.js
```

## Commands

- `!help` - Display the available commands.
- `!setcolor <color>` - Set the embed color for sticky messages.
- `!setimage <imageURL>` - Set the embed image for sticky messages.
- `!settitle <title>` - Set the title for sticky messages.
- `!stick <message>` - Stick a message to the channel.
- `!unstick` - Unstick the current sticky message.

### Permissions

Commands are restricted to users with specific roles. Update the `allowedRoles` array in `index.js` with the role IDs that are allowed to use the commands:

```
const allowedRoles = ['role-id-1', 'role-id-2', 'role-id-3'];
```

## Contributing

1. Fork the repository.
2. Create a new branch (`git checkout -b feature-branch`).
3. Make your changes.
4. Commit your changes (`git commit -am 'Add new feature'`).
5. Push to the branch (`git push origin feature-branch`).
6. Create a new Pull Request.

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.

Make sure to replace placeholders such as `yourusername`, `your-discord-bot-token`, `your-database-host`, `your-database-user`, `your-database-password`, `your-database-name`, and `your-email@example.com` with your actual information.
